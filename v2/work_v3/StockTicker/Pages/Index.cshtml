@page  
@using StockTicker.Models
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<!DOCTYPE html>
<html>

    <head>
         <script src="lib/draggable-piechart/draggable-piechart.js"></script>
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    </head>
    
    <body style="padding-bottom : 79px">

<h1 class="display-4 text-center"><u>Stock Ticker Game</u></h1>

<!--Show this at page start then after information is submitted save the data and hide this div-->
<div id="startArea" class="text-center" runat="server">
    <form method="post">
        <span>Please Enter a Stock Symbol To Begin Game:</span>

        <select id="stockSymbol" name="stockSymbol">
               <option value="AAPL">AAPL - (apple)</option>
               <option value="MSFT">MSFT - (microsoft)</option>
               <option value="AMZN">AMZN - (amazon)</option>
               <option value="TSLA">TSLA - (tesla)</option>
               <option value="SCKT">SCKT - (socket)</option>
               <option value="GME">GME - (gamestop)</option>
        </select>
        
        <br />
        @Html.AntiForgeryToken()
        <input type="button" id="startButton" value="Start" onclick="toggleDiv('startArea')"/>

    </form>
</div>


<!--after above info is submitted and saved to DB unhide this div-->
<div id="gameArea" class="text-center" style="visibility:hidden" runat="server">

    <!--Show graph here-->
    <div id="graph">
    <center>
        <div id="tester" style="width:600px;height:250px;"></div>
    </center>
     <center>
                <canvas id="piechart" width="300" height="300"></canvas>
            </center>
    </div><br/>

    <!--users bank account-->

        <table class="account-info">
            <tr>
                <th class="account-info">Bank Account:</th>
                <td class="account-info" id="bankTotal">$@Model.Balance</td>
            </tr>
            <tr>
                <th class="account-info">Owned Stock:</th>
                <td class="account-info"  id="stockOwn">@Model.StockOwned</td>
            </tr>
        </table>
        <br/>
    
        <form id="menu" method="post">
            <!--buttons for buy or sell-->
            <div id="stockInfo"></div>
            <div id="stockInfoHID"></div>
            <span>Would you like to Buy, Sell, Hold, or Quit?</span><br />
            <input type="radio" id="buyButton" name="bshbtn" value="Buy" onclick="showBuySellInput()">Buy</>
            <input type="radio" id="sellButton" name="bshbtn" value="Sell" onclick="showBuySellInput()" />Sell</>
            <input type="radio" id="holdButton" name="bshbtn" value="Hold" onclick="showBuySellInput()" />Hold</><br />
            <input type="text" id="buySellInput" style="visibility:hidden" onkeyup="updateSlider(document.getElementById('buySellInput').value)" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" /><br /><br />
            <center>
                <div class="slidecontainer" id="slider" style="visibility:hidden">
                    <input type="range" min="0" max="@Model.Balance" value="1" class="slider" id="myRange">
                    <p>Amount: <span id="demo"></span></p>
                </div>
            </center>
        
            @Html.AntiForgeryToken()
            <p style="visibility:hidden" id="notEgn">Not Enough stock avalible to sell ! </p><br />
            <input type="button" id="acceptButton" value="Accept" /><br />
            <p style="visibility:hidden" id="notOpt">Please pick one of the three options [buy,sell,hold] </p><br />
            @Html.AntiForgeryToken()
             <input type="button" id="quitButton" value="Quit" data-target="#myModal" data-toggle="modal" />
        </form>

</div>


    <!--
        Modal code for the quit funct

    -->
    <div class="container">
  <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Game Results
          </h4>
        </div>
        <div class="modal-body">
          <p>You started off with $10,000</p>
          <p>You picked <a id="stockNameEnd"></a></p>
          <p>After playing the game and a force sellout</p>
          <p>Your balance is $<a id="totalEnd"></a></p>
        </div>
        <div class="modal-footer">
          <button class="btn btn-default" onClick="window.location.reload()">Close</button>
        </div>
      </div>
      
    </div>
  </div>
  
</div>

</body>

</html>

@section Scripts
{

    <script src="https://cdn.plot.ly/plotly-2.12.1.min.js"></script>
    <script src="plotly-2.12.1.min.js"></script>

<!--load account info-->
    <script> 
        var data = [
            {
                x: ['Bank Account', 'Stocks'],
                y: [@Model.Balance, @Model.StockOwned],
                type: 'bar'
            }
        ];

        Plotly.newPlot('tester', data);
    </script>

    <script src="/lib/draggable-piechart/draggable-piechart.js"></script>
    <script src="/lib/draggable-piechart/draggable-piechart-jquery.js"></script>

<!--Get data when something changes on pie chart-->
    <script>
        function onPieChartChange(piechart) {
            // get the percentage for the first slice
            var pieBankB = piechart.getSliceSizePercentage(0);
            var pieStockB = piechart.getSliceSizePercentage(1);
            // get all percentages
            var percentages = piechart.getAllSliceSizePercentages();
        }
    </script>

    <!--show pie chart-->
    <script>
        var balance = @Model.Balance;
        var stocks = @Model.StockOwned;
        var total = balance + stocks;

        var proportions = [
            { proportion: 99.99, format: { color: "#a5d6c3", label: 'Account Balance' } },
            { proportion: 0.01, format: { color: "#a8c8ed", label: 'Stocks' } }];

        var newPie = new DraggablePiechart({
            canvas: document.getElementById('piechart'),
            proportions: proportions,
            collapsing: false,
            minAngle: 0.1,
            onchange: onPieChartChange
        });
    </script>







<!--show BuySell input-->
    <script type="text/javascript">
        function showBuySellInput() {
            var hold = document.getElementById("holdButton");
            if (hold.checked) {
                document.getElementById("buySellInput").style.visibility = 'hidden';
                document.getElementById("slider").style.visibility = 'hidden';
            }
            else {
                document.getElementById("buySellInput").style.visibility = 'visible';
                document.getElementById("slider").style.visibility = 'visible';
            }
        }
    </script>
<!--Toggle div-->
    <script type="text/javascript">

        //function to hide/show divs on start button click
        function toggleDiv(id) {
            var div = document.getElementById(id);
            div.style.display = "none";
            var div = document.getElementById('gameArea');
            div.style.visibility = "visible";
            //document.querySelector("#myRange").max = (10000/v parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);)

        };
    </script>

<!--update slider amount-->
    <script>
        function updateSlider(amount) {
            document.getElementById("myRange").value = amount;
            document.getElementById("demo").innerHTML = amount;
        };
     </script>

<!--Slider stuff-->
    <script type="text/javascript">
        
        var slider = document.getElementById("myRange");
        var output = document.getElementById("demo");
        var amountToBuySellText = document.getElementById("buySellInput");

        output.innerHTML = slider.value;

        slider.oninput = function () {
            output.innerHTML = this.value;
            amountToBuySellText.value = this.value;
        }
    </script>
    
<!--Ajax Scripts-->
    
<!--Start Game-->
    <script type="text/javascript">
        
        //initialize the game
        $("#startButton").click(function() {
            var e = document.getElementById("stockSymbol");
            var strUser = e.value;
            $.ajax({
                type: "POST",
                url: "/Index?handler=AjaxGameStart",
                data: { "val": strUser },
                contentType: 'application/x-www-form-urlencoded',
                dataType: "json",
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(message) {
                    document.getElementById("stockInfo").innerHTML = message;
                    document.getElementById("stockInfoHID").innerHTML = message;

                    var mes = document.getElementById("stockInfo").textContent;
                    var mes_1 = mes.split("-")[0];
                    var mes_2 = mes.split("-")[1];

                    document.getElementById("stockInfo").textContent = mes_1;
                    document.getElementById("stockInfoHID").textContent = mes_2;
                    //document.getElementById("stockInfoHID").style.visibility = 'Hidden';
                }
            });
        });
    </script>
    
<!--Accept Button-->
    <script type="text/javascript">   
        
        function updatedApi() {

    document.getElementById("notOpt").style.visibility = "hidden";
    document.getElementById("notEgn").style.visibility = "hidden";


    var e = document.getElementById("stockSymbol");
    var strUser = e.value;

    e = document.getElementById("stockInfoHID");
    var strDate = e.textContent;


    $.ajax({
        type: "POST",
        url: "/Index?handler=AjaxBuy",
        data: { "val": strUser, "valTwo": strDate },
        contentType: 'application/x-www-form-urlencoded',
        dataType: "json",
        headers:
        {
            "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
        },
        success: function(message) {
            document.getElementById("stockInfo").innerHTML = message;
            document.getElementById("stockInfoHID").innerHTML = message;

            var mes = document.getElementById("stockInfo").textContent;
            var mes_1 = mes.split("-")[0];
            var mes_2 = mes.split("-")[1];

            document.getElementById("stockInfo").textContent = mes_1;
            document.getElementById("stockInfoHID").textContent = mes_2;
            //document.getElementById("stockInfoHID").style.visibility = 'Hidden';

            var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
            var buySellInput_v = parseFloat(document.querySelector("#buySellInput").value);
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
            var data = [
            {
                x: ['Bank Account', 'Stocks'],
                y: [bank_v.toFixed(2), (buySellInput_v * cost_v)],
                type: 'bar'
            }
        ];

        Plotly.newPlot('tester', data);

         let canvas = document.getElementById('piechart');
            let context = canvas.getContext('2d');

            context.clearRect(0, 0, canvas.width, canvas.height);

            var valu = stock_v * cost_v
            var total = bank_v + valu;

            var proportions = [
                { proportion: bank_v / total, format: { color: "#a5d6c3", label: 'Account Balance' } },
                { proportion: valu / total, format: { color: "#a8c8ed", label: 'Stocks' } }];

            var newPie = new DraggablePiechart({
                canvas: document.getElementById('piechart'),
                proportions: proportions,
                onchange: onPieChartChange
            });

                    document.getElementById("stockNameEnd").textContent = document.getElementById("stockSymbol").value;
                    var tot = bank_v + (cost_v * stock_v);
                    document.getElementById("totalEnd").textContent = tot.toFixed(2);
        }
    });
}
        
        //function to handle accept button (buy/sell/hold)
$("#acceptButton").click(function() {

    var buySellInput_v = parseFloat(document.querySelector("#buySellInput").value);
    var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
    var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
    var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);

    var buySellInput = document.querySelector("#buySellInput");
    var bank = document.querySelector("#bankTotal");
    var stock = document.querySelector("#stockOwn");

    
    if (document.getElementById('buyButton').checked) {

        stock_v = stock_v + buySellInput_v;

        bank_v = bank_v - (buySellInput_v * cost_v)

        buySellInput.value = stock_v.toString();
        document.querySelector("#myRange").value =  stock_v;
        document.querySelector("#demo").textContent = stock_v.toString();
        bank.textContent = '$' + bank_v.toFixed(2);
        stock.textContent = stock_v.toString();

        updatedApi();
    }
    else if (document.getElementById('sellButton').checked) {

        if (stock_v < buySellInput_v) {
            document.getElementById("notEgn").style.visibility = "visible";
        }
        else { 
        stock_v = stock_v - buySellInput_v;

        bank_v = bank_v + (buySellInput_v * cost_v)

        buySellInput.value = stock_v.toString();
        document.querySelector("#myRange").value =  stock_v;
        document.querySelector("#demo").textContent = stock_v.toString();
        bank.textContent = '$' + bank_v.toFixed(2);
        stock.textContent = stock_v.toString();

        updatedApi();
    }
}
    else if (document.getElementById('holdButton').checked) { 

    updatedApi();
}
    else { 

        document.getElementById("notOpt").style.visibility = "visible";
    }
});
    </script>
      
@*
    <!--Quit Button-->
    <script type="text/javascript">
        //function to quit game
        $("#quitButton").click(function(message) {
            $.ajax({
                type: "POST",
                url: "/Index?handler=AjaxQuit",
                data: {  },
                contentType: 'application/x-www-form-urlencoded',
                dataType: "json",
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    
                }
            });
        });
               
    </script>*@
}
