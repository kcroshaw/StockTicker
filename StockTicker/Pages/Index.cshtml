@page

@using StockTicker.Models
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<!DOCTYPE html>
<html>
<head>
    <script src="lib/draggable-piechart/draggable-piechart.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>

<body style="padding-bottom : 79px">

    <h1 class="display-4 text-center"><u>Stock Ticker Game</u></h1>

    <!--Show this at page start then after information is submitted save the data and hide this div-->
    <div id="startArea" class="text-center" runat="server">
        <form method="post">
            <span>Please Enter a Stock Symbol To Begin Game:</span>

            <select id="stockSymbol" name="stockSymbol">
                <option value="AAPL">AAPL - (apple)</option>
                <option value="MSFT">MSFT - (microsoft)</option>
                <option value="AMZN">AMZN - (amazon)</option>
                <option value="TSLA">TSLA - (tesla)</option>
                <option value="SCKT">SCKT - (socket)</option>
                <option value="GME">GME - (gamestop)</option>
            </select>

            <br />
            @Html.AntiForgeryToken()
            <input type="button" id="startButton" value="Start" onclick="toggleDiv('startArea')" />
        </form>
    </div>


    <!--after above info is submitted and saved to DB unhide this div-->
    <div id="gameArea" class="text-center" style="visibility:hidden" runat="server">

        <!--Show graph here-->
        <div id="graph">
            <center>
                <canvas id="piechart" width="400" height="400"></canvas>
            </center>
        </div><br />

        <!--users bank account-->

        <table class="account-info">
            <tr>
                <th class="account-info">Bank Account:</th>
                <td class="account-info" id="bankTotal">$@Model.Balance</td>
            </tr>
            <tr>
                <th class="account-info">Owned Stock:</th>
                <td class="account-info" id="stockOwn">@Model.StockOwned</td>
            </tr>
        </table>
        <br />

        <form id="menu" method="post">
            <!--buttons for buy or sell-->
            <div id="stockInfo"></div>
            <div id="stockInfoHID"></div>
            <span>Would you like to Buy, Sell, Hold, or Quit?</span><br />
            <input type="radio" id="buyButton" name="bshbtn" value="Buy" onclick="showBuySellInput()">Buy</>
            <input type="radio" id="sellButton" name="bshbtn" value="Sell" onclick="showBuySellInput()" />Sell</>
            <input type="radio" id="holdButton" name="bshbtn" value="Hold" onclick="showBuySellInput()" />Hold</><br />
            <input type="text" id="buySellInput" style="visibility:hidden" onkeyup="updateSlider(document.getElementById('buySellInput').value)" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" /><br /><br />
            <center>
                <div class="slidecontainer" id="slider" style="visibility:hidden">

                    <input type="range" id="myRange" class="slider" value="0">
                    <p>Amount of Stock: <span id="demo"></span></p>
                    <p>Amount in Dollars: <span id="stockInDollars"></span></p>
                </div>
            </center>

            @Html.AntiForgeryToken()
            <p style="visibility:hidden" id="notEgn">Not Enough stock avalible to sell ! </p><br />
            <input type="button" id="acceptButton" value="Accept" /><br />
            <p style="visibility:hidden" id="notOpt">Please pick one of the three options [buy,sell,hold] </p><br />
            @Html.AntiForgeryToken()
            <input type="button" id="quitButton" value="Quit" data-target="#myModal" data-toggle="modal" />
        </form>

    </div>
    <!--
        Modal code for the quit funct
    -->
    <div class="container">
        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">
                            Game Results
                        </h4>
                    </div>
                    <div class="modal-body">
                        <p>You started off with $10,000</p>
                        <p>You picked <a id="stockNameEnd"></a></p>
                        <p>After playing the game and a force sellout</p>
                        <p>Your balance is $<a id="totalEnd"></a></p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default" onClick="window.location.reload()">Close</button>
                    </div>
                </div>

            </div>
        </div>

    </div>

</body>

</html>

@section Scripts
{
    <script src="/lib/draggable-piechart/draggable-piechart.js"></script>
    <script src="/lib/draggable-piechart/draggable-piechart-jquery.js"></script>
    <script>
        var existingBankPct;
        var existing
    </script>

    <!--Get data when something changes on pie chart-->
    <script>
        function onPieChartChange(piechart) {
            var sell = document.getElementById("sellButton");
            var buy = document.getElementById("buyButton");
            var amountToBuySellText = document.getElementById("buySellInput");

            var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
            var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            var stock_vInDollars = stock_v * cost_v;
            var total = bank_v + stock_vInDollars;
            // get the percentage for the first slice
            var pieBankB = piechart.getSliceSizePercentage(0);
            var pieStockB = piechart.getSliceSizePercentage(1);

            var bankFromPct = total * (pieBankB / 100);
            var stockFromPct = total * (pieStockB / 100);

            document.getElementById("stockInDollars").innerHTML = bankFromPct + " " + bank_v;

            if (bankFromPct < bank_v) {
                buy.checked = true;
                amountToBuySellText.value = ((bankFromPct - bank_v) * -1).toFixed(2);
                updateSlider(((bankFromPct - bank_v) * -1).toFixed(2));
            }
            else if (stockFromPct < stock_vInDollars) {
                sell.checked = true;
                amountToBuySellText.value = ((stockFromPct - stock_vInDollars) * -1).toFixed(2);
                updateSlider(((stockFromPct - stock_vInDollars) * -1).toFixed(2));
            }

            
}
    </script>

    <!--show pie chart-->
    <script>
        var proportions = [
            { proportion: 99.99, format: { color: "#a5d6c3", label: 'Account Balance' } },
            { proportion: 0.01, format: { color: "#a8c8ed", label: 'Stocks' } }];

        var newPie = new DraggablePiechart({
            canvas: document.getElementById('piechart'),
            proportions: proportions,
            collapsing: false,
            minAngle: 0.0001,
            onchange: onPieChartChange
        });
    </script>



    <!--show BuySell input-->
    <script type="text/javascript">function showBuySellInput() {
            var hold = document.getElementById("holdButton");
            var sell = document.getElementById("sellButton");
            var buy = document.getElementById("buyButton");

            var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
            var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            var buySellInput = document.querySelector("#buySellInput");

            if (hold.checked) {
                document.getElementById("buySellInput").style.visibility = 'hidden';
                document.getElementById("slider").style.visibility = 'hidden';
            }
            else if (sell.checked) {
                document.getElementById("buySellInput").style.visibility = 'visible';
                document.getElementById("slider").style.visibility = 'visible';
                document.getElementById("myRange").max = stock_v * cost_v;
                document.getElementById("myRange").value = 0;
                buySellInput.value = 0;
                document.querySelector("#myRange").value = 0;
                document.querySelector("#demo").textContent = 0;
                document.querySelector("#stockInDollars").textContent = 0;
            }
            else {
                document.getElementById("buySellInput").style.visibility = 'visible';
                document.getElementById("slider").style.visibility = 'visible';
                document.getElementById("myRange").max = bank_v;
                document.getElementById("myRange").value = 0;
                buySellInput.value = 0;
                document.querySelector("#myRange").value = 0;
                document.querySelector("#demo").textContent = 0;
                document.querySelector("#stockInDollars").textContent = 0;
            }
        }</script>
    <!--Toggle div-->
    <script type="text/javascript">//function to hide/show divs on start button click
        function toggleDiv(id) {
            var div = document.getElementById(id);
            div.style.display = "none";
            var div = document.getElementById('gameArea');
            div.style.visibility = "visible";
            //document.querySelector("#myRange").max = (10000/v parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);)

        };</script>

    <!--update slider amount-->
    <script>function updateSlider(amount) {
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            document.getElementById("myRange").value = amount;
            document.getElementById("demo").innerHTML = (amount / cost_v).toFixed(2);
            document.getElementById("stockInDollars").innerHTML = amount;
        };</script>

    <!--Slider stuff-->
    <script type="text/javascript">var slider = document.getElementById("myRange");
        

        slider.oninput = function () {

            var output = document.getElementById("demo");
            var amountToBuySellText = document.getElementById("buySellInput");

            var sell = document.getElementById("sellButton");
            var buy = document.getElementById("buyButton");

            var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
            var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            var stock_vInDollars = stock_v * cost_v;
            var total = bank_v + stock_vInDollars;

            output.innerHTML = slider.value;
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            document.getElementById("stockInDollars").innerHTML = this.value;
            output.innerHTML = (this.value / cost_v).toFixed(2);
            
            amountToBuySellText.value = this.value;

            var bankProportion = (bank_v - this.value) / total;
            var stockProportion = (total - bankProportion) / total;

            //output.innerHTML = bankProportion * 100;

            let canvas = document.getElementById('piechart');
            let context = canvas.getContext('2d');

            context.clearRect(0, 0, canvas.width, canvas.height);

            if (buy.checked = true) {
                var proportions = [
                    { proportion: bankProportion * 100, format: { color: "#a5d6c3", label: 'Account Balance' } },
                    { proportion: stockProportion, format: { color: "#a8c8ed", label: 'Stocks' } }];

                var newPie = new DraggablePiechart({
                    canvas: document.getElementById('piechart'),
                    proportions: proportions,
                    onchange: onPieChartChange
                });
            }
            
        }</script>

    <!--Ajax Scripts-->
    <!--Start Game-->
    <script type="text/javascript">//initialize the game
        $("#startButton").click(function () {
            var e = document.getElementById("stockSymbol");
            var strUser = e.value;
            $.ajax({
                type: "POST",
                url: "/Index?handler=AjaxGameStart",
                data: { "val": strUser },
                contentType: 'application/x-www-form-urlencoded',
                dataType: "json",
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (message) {
                    document.getElementById("stockInfo").innerHTML = message;
                    document.getElementById("stockInfoHID").innerHTML = message;

                    var mes = document.getElementById("stockInfo").textContent;
                    var mes_1 = mes.split("-")[0];
                    var mes_2 = mes.split("-")[1];

                    document.getElementById("stockInfo").textContent = mes_1;
                    document.getElementById("stockInfoHID").textContent = mes_2;
                    //document.getElementById("stockInfoHID").style.visibility = 'Hidden';
                    var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
                    document.getElementById("myRange").max = bank_v;
                }
            });
        });</script>

    <!--Accept Button-->
    <script type="text/javascript">function updatedApi() {

            document.getElementById("notOpt").style.visibility = "hidden";
            document.getElementById("notEgn").style.visibility = "hidden";


            var e = document.getElementById("stockSymbol");
            var strUser = e.value;

            e = document.getElementById("stockInfoHID");
            var strDate = e.textContent;


            $.ajax({
                type: "POST",
                url: "/Index?handler=AjaxBuy",
                data: { "val": strUser, "valTwo": strDate },
                contentType: 'application/x-www-form-urlencoded',
                dataType: "json",
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (message) {
                    document.getElementById("stockInfo").innerHTML = message;
                    document.getElementById("stockInfoHID").innerHTML = message;

                    var mes = document.getElementById("stockInfo").textContent;
                    var mes_1 = mes.split("-")[0];
                    var mes_2 = mes.split("-")[1];

                    document.getElementById("stockInfo").textContent = mes_1;
                    document.getElementById("stockInfoHID").textContent = mes_2;
                    //document.getElementById("stockInfoHID").style.visibility = 'Hidden';
                    var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
                    document.getElementById("myRange").max = bank_v;


                    let canvas = document.getElementById('piechart');
                    let context = canvas.getContext('2d');

                    context.clearRect(0, 0, canvas.width, canvas.height);

                    var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
                    var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
                    var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
                    var stock_vInDollars = stock_v * cost_v;
                    var total = bank_v + stock_v;

                    var proportions = [
                        { proportion: bank_v / total, format: { color: "#a5d6c3", label: 'Account Balance' } },
                        { proportion: stock_vInDollars / total, format: { color: "#a8c8ed", label: 'Stocks' } }];

                    var newPie = new DraggablePiechart({
                        canvas: document.getElementById('piechart'),
                        proportions: proportions,
                        onchange: onPieChartChange
                    });

                }
            });
        }



        //function to handle accept button (buy/sell/hold)
        $("#acceptButton").click(function (piechart) {

            var buySellInput_v = parseFloat(document.querySelector("#buySellInput").value);
            var bank_v = parseFloat(document.querySelector("#bankTotal").textContent.split('$')[1]);
            var stock_v = parseFloat(document.querySelector("#stockOwn").textContent);
            var cost_v = parseFloat(document.querySelector("#stockInfo").textContent.split('$')[1]);
            var stock_vInDollars = stock_v * cost_v;

            var buySellInput = document.querySelector("#buySellInput");
            var bank = document.querySelector("#bankTotal");
            var stock = document.querySelector("#stockOwn");


            if (document.getElementById('buyButton').checked) {

                stock_v = (stock_v + (buySellInput_v / cost_v)).toFixed(2);

                bank_v = bank_v - buySellInput_v;

                updatedApi();
            }
            else if (document.getElementById('sellButton').checked) {

                stock_v = (stock_v - (buySellInput_v / cost_v)).toFixed(2);

                bank_v = bank_v + buySellInput_v;

                updatedApi();

            }
            else if (document.getElementById('holdButton').checked) {

                updatedApi();
            }
            else {

                document.getElementById("notOpt").style.visibility = "visible";
            }


            buySellInput.value = 0;
            document.querySelector("#myRange").value = 0;
            document.querySelector("#demo").textContent = 0;
            bank.textContent = '$' + bank_v.toFixed(2);
            stock.textContent = stock_v.toString();
            document.getElementById("myRange").max = bank_v;

        });</script>



    @*
        <!--Quit Button-->
        <script type="text/javascript">
            //function to quit game
            $("#quitButton").click(function(message) {
                $.ajax({
                    type: "POST",
                    url: "/Index?handler=AjaxQuit",
                    data: {  },
                    contentType: 'application/x-www-form-urlencoded',
                    dataType: "json",
                    headers:
                    {
                        "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function() {

                    }
                });
            });

        </script>*@
}
